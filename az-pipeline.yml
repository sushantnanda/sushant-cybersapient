trigger:
  branches:
    include:
      - main
      
variables:
  - group: DevOpsSecrets  # contains ACR_USERNAME and ACR_PASSWORD
  - name: ACR_NAME
    value: devtask
  - name: IMAGE_NAME
    value: devops-task
  - name: IMAGE_TAG
    value: latest
  - name: AKS_CLUSTER_NAME
    value: aks-devops-task
  - name: AKS_RG_NAME
    value: rg-task

stages:
  - stage: BuildAndPush
    displayName: "üîß Build and Push Docker Image"
    jobs:
      - job: Build
        displayName: "üê≥ Docker Build and Push"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - script: |
              echo "Logging in to ACR using admin credentials..."
              echo "$ACR_PASSWORD" | docker login "${ACR_NAME}.azurecr.io" -u "$ACR_USERNAME" --password-stdin

              echo "üê≥ Building and pushing multi-arch image..."
              docker buildx create --use --name buildx-builder || true
              docker buildx build \
                --platform linux/amd64 \
                -t "${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG}" \
                --push .
            displayName: "Build & Push Image"
            env:
              DOCKER_CLI_EXPERIMENTAL: enabled
              ACR_USERNAME: $(ACR_USERNAME)
              ACR_PASSWORD: $(ACR_PASSWORD)
              ACR_NAME: $(ACR_NAME)
              IMAGE_NAME: $(IMAGE_NAME)
              IMAGE_TAG: $(IMAGE_TAG)

          - script: |
              echo "Image pushed to ACR: ${ACR_NAME}.azurecr.io/${IMAGE_NAME}:${IMAGE_TAG}"
            displayName: "Confirm ACR Push"
            env:
              ACR_NAME: $(ACR_NAME)
              IMAGE_NAME: $(IMAGE_NAME)
              IMAGE_TAG: $(IMAGE_TAG)

  - stage: Deploy
    displayName: "üö¢ Deploy to AKS with Helm"
    dependsOn: BuildAndPush
    jobs:
      - job: Deploy
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: "Helm Deploy to AKS"
            inputs:
              azureSubscription: devtest-rg-task-serviceconnection  # your existing service connection
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Getting AKS credentials..."
                az aks get-credentials \
                  --resource-group $(AKS_RG_NAME) \
                  --name $(AKS_CLUSTER_NAME) \
                  --admin --overwrite-existing

                echo "Deploying Helm chart..."
                helm upgrade --install devops-task ./helm \
                  --set image.repository="${ACR_NAME}.azurecr.io/${IMAGE_NAME}" \
                  --set image.tag="${IMAGE_TAG}"

                echo "üîÅ Rolling out deployment to force latest image pull..."
                kubectl rollout restart deployment/devops-task
